// Code generated by mockery v1.1.2. DO NOT EDIT.

package mocks

import (
	entity "go-cicd/app/domain/entity"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// TokenGenerator is an autogenerated mock type for the TokenGenerator type
type TokenGenerator struct {
	mock.Mock
}

// GenTokenForUser provides a mock function with given fields: user
func (_m *TokenGenerator) GenTokenForUser(user *entity.User) (string, error) {
	ret := _m.Called(user)

	var r0 string
	if rf, ok := ret.Get(0).(func(*entity.User) string); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*entity.User) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GenTokenForUserWithExpireTime provides a mock function with given fields: user, expirationTime
func (_m *TokenGenerator) GenTokenForUserWithExpireTime(user *entity.User, expirationTime time.Time) (string, error) {
	ret := _m.Called(user, expirationTime)

	var r0 string
	if rf, ok := ret.Get(0).(func(*entity.User, time.Time) string); ok {
		r0 = rf(user, expirationTime)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*entity.User, time.Time) error); ok {
		r1 = rf(user, expirationTime)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
